

--------------------------------------------------
Mon Sep  4 12:36:57 2017
--------------------------------------------------



--------------------------------------------------
Mon Sep  4 12:38:36 2017
--------------------------------------------------



--------------------------------------------------
Mon Sep  4 12:45:51 2017
--------------------------------------------------

//-------------------------------------------------------------------------------------------------------
//2017.2 C++								월45금56								9.1금요일 (1주 1)
//한 학기 강의를 저장할 수 있도록 save()를 만듬

//-------------------------------------------------------------------------------------------------------

#include <iostream>
#include <fstream>
#include <chrono>
#include <ctime>
#include <string>
using namespace std;
void save();		// save()라는 함수를 선언(decalraration)
int main()
{

	cout << "hello, world!   ";


	save();			//save()라는 함수를 호출(call)
}


--------------------------------------------------
Mon Sep  4 12:53:28 2017
--------------------------------------------------

//-------------------------------------------------------------------------------------------------------
//2017.2 C++								월45금56								9.1금요일 (1주 1)
//한 학기 강의를 저장할 수 있도록 save()를 만듬

//-------------------------------------------------------------------------------------------------------

#include <iostream>
#include "save.h"   //save 함수의 선언은 여기에!


using namespace std;
void save();		// save()라는 함수를 선언(decalraration)

int main()
{

	cout << " 안녕 C++ 처음이지? " << endl;


	save();			//save()라는 함수를 호출(call)
}


--------------------------------------------------
Mon Sep  4 13:10:53 2017
--------------------------------------------------

//-------------------------------------------------------------------------------------------------------
//2017.2 C++								월45금56	9.4 월요일						9.1금요일 (1주 2)
//한 학기 강의를 저장할 수 있도록 save()를 만듬
//
//9.2 - 한 학기 강의를 저장할 수 있도록 save()를 만듦.
//9.4 - file 분리,
//    = CPP I/O,
//-------------------------------------------------------------------------------------------------------

#include <iostream>
#include "save.h"   //save 함수의 선언은 여기에!


using namespace std;
void save();		// save()라는 함수를 선언(decalraration)


//cin, cout,     cerr, clog 라는 4개의 스트림 객체가 자동으로 생성된다.

int main()
{
	save();

	cout << "---------------------------" << endl;
	cout << "    구구단 프로그램입니다. " << endl;
	cout << "---------------------------" << endl;


}



--------------------------------------------------
Mon Sep  4 13:11:09 2017
--------------------------------------------------

//-------------------------------------------------------------------------------------------------------
//2017.2 C++								월45금56	9.4 월요일						9.1금요일 (1주 2)
//한 학기 강의를 저장할 수 있도록 save()를 만듬
//
//9.2 - 한 학기 강의를 저장할 수 있도록 save()를 만듦.
//9.4 - file 분리,
//    = CPP I/O,
//-------------------------------------------------------------------------------------------------------

#include <iostream>
#include "save.h"   //save 함수의 선언은 여기에!


using namespace std;
void save();		// save()라는 함수를 선언(decalraration)


//cin, cout,     cerr, clog 라는 4개의 스트림 객체가 자동으로 생성된다.

int main()
{
	save();

	cout << "---------------------------" << endl;
	cout << "   구구단 프로그램입니다.  " << endl;
	cout << "---------------------------" << endl;


}



--------------------------------------------------
Mon Sep  4 13:12:47 2017
--------------------------------------------------

//-------------------------------------------------------------------------------------------------------
//2017.2 C++								월45금56	9.4 월요일						9.1금요일 (1주 2)
//한 학기 강의를 저장할 수 있도록 save()를 만듬
//
//9.2 - 한 학기 강의를 저장할 수 있도록 save()를 만듦.
//9.4 - file 분리,
//    = CPP I/O,
//-------------------------------------------------------------------------------------------------------

#include <iostream>
#include "save.h"   //save 함수의 선언은 여기에!


using namespace std;
void save();		// save()라는 함수를 선언(decalraration)


//cin, cout,     cerr, clog 라는 4개의 스트림 객체가 자동으로 생성된다.

int main()
{
	save();

	cout << "---------------------------" << endl;
	cout << "  구구단 프로그램입니다.   " << endl;
	cout << "---------------------------" << endl;


}



--------------------------------------------------
Mon Sep  4 13:13:14 2017
--------------------------------------------------

//-------------------------------------------------------------------------------------------------------
//2017.2 C++								월45금56	9.4 월요일						9.1금요일 (1주 2)
//한 학기 강의를 저장할 수 있도록 save()를 만듬
//
//9.2 - 한 학기 강의를 저장할 수 있도록 save()를 만듦.
//9.4 - file 분리,
//    = CPP I/O,
//-------------------------------------------------------------------------------------------------------

#include <iostream>
#include "save.h"   //save 함수의 선언은 여기에!


using namespace std;
void save();		// save()라는 함수를 선언(decalraration)


//cin, cout,     cerr, clog 라는 4개의 스트림 객체가 자동으로 생성된다.

int main()
{
	save();

	cout << "--------------------------" << endl;
	cout << "  구구단 프로그램입니다.   " << endl;
	cout << "--------------------------" << endl;


}



--------------------------------------------------
Mon Sep  4 13:13:48 2017
--------------------------------------------------

//-------------------------------------------------------------------------------------------------------
//2017.2 C++								월45금56	9.4 월요일						9.1금요일 (1주 2)
//한 학기 강의를 저장할 수 있도록 save()를 만듬
//
//9.2 - 한 학기 강의를 저장할 수 있도록 save()를 만듦.
//9.4 - file 분리,
//    = CPP I/O,
//-------------------------------------------------------------------------------------------------------

#include <iostream>
#include "save.h"   //save 함수의 선언은 여기에!


using namespace std;
void save();		// save()라는 함수를 선언(decalraration)


//cin, cout,     cerr, clog 라는 4개의 스트림 객체가 자동으로 생성된다.

int main()
{
	save();

	cout << "--------------------------" << endl;
	cout << "  구구단 프로그램입니다.  " << endl;
	cout << "--------------------------" << endl;
	cout << "         여백의 미        " << endl;


}



--------------------------------------------------
Mon Sep  4 13:17:08 2017
--------------------------------------------------

//-------------------------------------------------------------------------------------------------------
//2017.2 C++								월45금56	9.4 월요일						9.1금요일 (1주 2)
//한 학기 강의를 저장할 수 있도록 save()를 만듬
//
//9.2 - 한 학기 강의를 저장할 수 있도록 save()를 만듦.
//9.4 - file 분리,
//    = CPP I/O,
//-------------------------------------------------------------------------------------------------------

#include <iostream>
#include "save.h"   //save 함수의 선언은 여기에!


using namespace std;
void save();		// save()라는 함수를 선언(decalraration)


//cin, cout,     cerr, clog 라는 4개의 스트림 객체가 자동으로 생성된다.

int main()
{
	save();

	cout << "-------------------------" << endl;
	cout << "  구구단 프로그램입니다  " << endl;
	cout << "-------------------------" << endl;
	cout << "몇 단을 출력할까요?" << endl;
	int num;
	cin >> num;

	for(int i = 1; i <= 9; ++i)
	   cout << num << "*" << i << "=" << num*i << endl;

}



--------------------------------------------------
Mon Sep  4 13:18:18 2017
--------------------------------------------------

//-------------------------------------------------------------------------------------------------------
//2017.2 C++								월45금56	9.4 월요일						9.1금요일 (1주 2)
//한 학기 강의를 저장할 수 있도록 save()를 만듬
//
//9.2 - 한 학기 강의를 저장할 수 있도록 save()를 만듦.
//9.4 - file 분리,
//    = CPP I/O,
//-------------------------------------------------------------------------------------------------------

#include <iostream>
#include "save.h"   //save 함수의 선언은 여기에!


using namespace std;
void save();		// save()라는 함수를 선언(decalraration)


//cin, cout,     cerr, clog 라는 4개의 스트림 객체가 자동으로 생성된다.

int main()
{
	save();

	cout << "-------------------------" << endl;
	cout << "  구구단 프로그램입니다  " << endl;
	cout << "-------------------------" << endl;
	
 while(true) {
	cout << "몇 단을 출력할까요?" << endl;
	int num;
	cin >> num;

	for(int i = 1; i <= 9; ++i)
	   cout << num << "*" << i << "=" << num*i << endl;
	}
}



--------------------------------------------------
Mon Sep  4 13:37:08 2017
--------------------------------------------------

//-------------------------------------------------------------------------------------------------------
//2017.2 C++								월45금56	9.4 월요일						9.1금요일 (1주 2)
//한 학기 강의를 저장할 수 있도록 save()를 만듬
//
//9.2 - 한 학기 강의를 저장할 수 있도록 save()를 만듦.
//9.4 - file 분리,
//    = CPP I/O,
//-------------------------------------------------------------------------------------------------------

#include <iostream>
#include "save.h"   //save 함수의 선언은 여기에!


using namespace std;
void save();		// save()라는 함수를 선언(decalraration)


//cin, cout,     cerr, clog 라는 4개의 스트림 객체가 자동으로 생성된다. cin 빼고는 모니터와 관련이 있다.

int main()
{
	save();

	int a = 10 , b = 20;

	//여기서 뭔가를 해서 a와 b의 값을 바꿔주세요.

	cout << a << "," << b << endl; // 출력은 20 .10이 되어야겠죠?
	
}



--------------------------------------------------
Mon Sep  4 13:37:54 2017
--------------------------------------------------

//-------------------------------------------------------------------------------------------------------
//2017.2 C++								월45금56	9.4 월요일						9.1금요일 (1주 2)
//한 학기 강의를 저장할 수 있도록 save()를 만듬
//
//9.2 - 한 학기 강의를 저장할 수 있도록 save()를 만듦.
//9.4 - file 분리,
//    = CPP I/O,
//-------------------------------------------------------------------------------------------------------

#include <iostream>
#include "save.h"   //save 함수의 선언은 여기에!


using namespace std;
void save();		// save()라는 함수를 선언(decalraration)


//cin, cout,     cerr, clog 라는 4개의 스트림 객체가 자동으로 생성된다. cin 빼고는 모니터와 관련이 있다.

int main()
{
	save();

	int a = 10 , b = 20;

	int t;
	t = a;
	a = b;
	b = t;
	//여기서 뭔가를 해서 a와 b의 값을 바꿔주세요.

	cout << a << "," << b << endl; // 출력은 20 .10이 되어야겠죠?
	
}



--------------------------------------------------
Mon Sep  4 13:51:01 2017
--------------------------------------------------

//-------------------------------------------------------------------------------------------------------
//2017.2 C++								월45금56	9.4 월요일						9.1금요일 (1주 2)
//한 학기 강의를 저장할 수 있도록 save()를 만듬
//
//9.2 - 한 학기 강의를 저장할 수 있도록 save()를 만듦.
//9.4 - file 분리,
//    = CPP I/O,
//-------------------------------------------------------------------------------------------------------

#include <iostream>
#include "save.h"   //save 함수의 선언은 여기에!


using namespace std;
void save();		// save()라는 함수를 선언(decalraration)

void f(int *, int *);

//cin, cout,     cerr, clog 라는 4개의 스트림 객체가 자동으로 생성된다. cin 빼고는 모니터와 관련이 있다.

int main()
{
	save();

	int a = 10 , b = 20;

   //f()를 호출해서 a와 b의 값을 바꿔주세요

	f(&a,&b);
	//여기서 뭔가를 해서 a와 b의 값을 바꿔주세요.

	cout << a << "," << b << endl; // 출력은 20 .10이 되어야겠죠?
	
}

void f(int *a, int *b)
{
	int t = *a;
	*a = *b;
	t = *b;
	return ;
}


--------------------------------------------------
Mon Sep  4 13:51:37 2017
--------------------------------------------------

//-------------------------------------------------------------------------------------------------------
//2017.2 C++								월45금56	9.4 월요일						9.1금요일 (1주 2)
//한 학기 강의를 저장할 수 있도록 save()를 만듬
//
//9.2 - 한 학기 강의를 저장할 수 있도록 save()를 만듦.
//9.4 - file 분리,
//    = CPP I/O,
//-------------------------------------------------------------------------------------------------------

#include <iostream>
#include "save.h"   //save 함수의 선언은 여기에!


using namespace std;
void save();		// save()라는 함수를 선언(decalraration)

void f(int *, int *);

//cin, cout,     cerr, clog 라는 4개의 스트림 객체가 자동으로 생성된다. cin 빼고는 모니터와 관련이 있다.

int main()
{
	save();

	int a = 10 , b = 20;

   //f()를 호출해서 a와 b의 값을 바꿔주세요

	f(&a,&b);
	//여기서 뭔가를 해서 a와 b의 값을 바꿔주세요.

	cout << a << "," << b << endl; // 출력은 20 .10이 되어야겠죠?
	
}

void f(int *a, int *b)
{
	int t = *a;
	*a = *b;
	*b = t;
	return ;
}


--------------------------------------------------
Mon Sep  4 13:51:52 2017
--------------------------------------------------

//-------------------------------------------------------------------------------------------------------
//2017.2 C++								월45금56	9.4 월요일						9.1금요일 (1주 2)
//한 학기 강의를 저장할 수 있도록 save()를 만듬
//
//9.2 - 한 학기 강의를 저장할 수 있도록 save()를 만듦.
//9.4 - file 분리,
//    = CPP I/O,
//-------------------------------------------------------------------------------------------------------

#include <iostream>
#include "save.h"   //save 함수의 선언은 여기에!


using namespace std;
void save();		// save()라는 함수를 선언(decalraration)

void f(int *, int *);

//cin, cout,     cerr, clog 라는 4개의 스트림 객체가 자동으로 생성된다. cin 빼고는 모니터와 관련이 있다.

int main()
{
	save();

	int a = 10 , b = 20;

   //f()를 호출해서 a와 b의 값을 바꿔주세요

	f(&a,&b);
	//여기서 뭔가를 해서 a와 b의 값을 바꿔주세요.

	cout << a << "," << b << endl; // 출력은 20 .10이 되어야겠죠?
	
}

void f(int *a, int *b)
{
	int t = *a;
	*a = *b;
	*b = t;
}


--------------------------------------------------
Mon Sep  4 14:19:19 2017
--------------------------------------------------

//-------------------------------------------------------------------------------------------------------
//2017.2 C++               월45금56	                    9.4 월요일                  9.1금요일 (1주 2)
//한 학기 강의를 저장할 수 있도록 save()를 만듬
//
//9.2 - 한 학기 강의를 저장할 수 있도록 save()를 만듦.
//9.4 - file 분리,
//    - CPP I/O, cin, cout
//    - 두 변수값의 교환 , pointer
//9.8 - 참조(reference)
//    - namespace, 선언, 메모리 , auto , decltype
//-------------------------------------------------------------------------------------------------------

#include <iostream>
#include "save.h"   //save 함수의 선언은 여기에!


using namespace std;
void save();		// save()라는 함수를 선언(decalraration)


//cin, cout,     cerr, clog 라는 4개의 스트림 객체가 자동으로 생성된다. cin 빼고는 모니터와 관련이 있다.

void f(int&, int&);

//C++ 에서 두 변수의 값을 바꾸는 code
int main()
{
	save();

	int a{ 10 }, b{ 20 };

	f(a, b);

	cout << a << "," << b << endl;
	
}

void f(int& a, int& b)
{
	int temp{ a };
	a = b;
	b = temp;
}


--------------------------------------------------
Fri Sep  8 13:45:47 2017
--------------------------------------------------

//-------------------------------------------------------------------------------------------------------
//2017.2 C++               월45금56	                    9.4 월요일                  9.1금요일 (1주 2)
//한 학기 강의를 저장할 수 있도록 save()를 만듬
//
//9.2 - 한 학기 강의를 저장할 수 있도록 save()를 만듦.
//9.4 - file 분리,
//    - CPP I/O, cin, cout
//    - 두 변수값의 교환 , pointer
//9.8 - 참조(reference)
//    - namespace, 선언, 메모리 , auto , decltype
//-------------------------------------------------------------------------------------------------------

#include <iostream>
#include "save.h"   //save 함수의 선언은 여기에!


using namespace std;
void save();		// save()라는 함수를 선언(decalraration)


//cin, cout,     cerr, clog 라는 4개의 스트림 객체가 자동으로 생성된다. cin 빼고는 모니터와 관련이 있다.


// C++ 에서 두 변수의 값을 바꾸는 code


void f(int&);



//포인터는 언제 사용하나요?
int main()
{
	save();

	int a{ 10 }, b{ 20 };

	cout << sizeof(int) << endl;

	f(a);

	
	
}

void f(int& a)
{
	

	cout << a << endl;
}


--------------------------------------------------
Fri Sep  8 13:49:13 2017
--------------------------------------------------

//-------------------------------------------------------------------------------------------------------
//2017.2 C++               월45금56	                    9.4 월요일                  9.1금요일 (1주 2)
//한 학기 강의를 저장할 수 있도록 save()를 만듬
//
//9.2 - 한 학기 강의를 저장할 수 있도록 save()를 만듦.
//9.4 - file 분리,
//    - CPP I/O, cin, cout
//    - 두 변수값의 교환 , pointer
//9.8 - 참조(reference)
//    - namespace, 선언, 메모리 , auto , decltype
//-------------------------------------------------------------------------------------------------------

#include <iostream>
#include "save.h"   //save 함수의 선언은 여기에!


using namespace std;
void save();		// save()라는 함수를 선언(decalraration)


//cin, cout,     cerr, clog 라는 4개의 스트림 객체가 자동으로 생성된다. cin 빼고는 모니터와 관련이 있다.


// C++ 에서 두 변수의 값을 바꾸는 code




class Dragon
{
	int trash[1000];
};

void f(Dragon);

void f(Dragon a)
{

	cout << "함수에  Dragon이 전달됨" << endl;
}


//포인터는 언제 사용하나요?
int main()
{
	save();

	Dragon d;

	

	cout << sizeof(Dragon) << endl;

	f(d);

	
	
}



--------------------------------------------------
Fri Sep  8 13:58:52 2017
--------------------------------------------------

//-------------------------------------------------------------------------------------------------------
//2017.2 C++               월45금56	                    9.4 월요일                  9.1금요일 (1주 2)
//한 학기 강의를 저장할 수 있도록 save()를 만듬
//
//9.2 - 한 학기 강의를 저장할 수 있도록 save()를 만듦.
//9.4 - file 분리,
//    - CPP I/O, cin, cout
//    - 두 변수값의 교환 , pointer
//9.8 - 참조(reference)
//    - namespace, 선언, 메모리 , auto , decltype
//-------------------------------------------------------------------------------------------------------

#include <iostream>
#include "save.h"   //save 함수의 선언은 여기에!


using namespace std;
void save();		// save()라는 함수를 선언(decalraration)


//cin, cout,     cerr, clog 라는 4개의 스트림 객체가 자동으로 생성된다. cin 빼고는 모니터와 관련이 있다.


class Dragon
{
	int trash[1000];
};

void f(Dragon);

void f(Dragon a)
{

	cout << "함수에  Dragon이 전달됨" << endl;
}


//포인터는 왜 사용하나요?
// -실제 데이터는 1,2,4,8바이터가 아니다.
// - 함수에 전달되는 인자가 그냥 전달하면 복사가 되어 전달된다.
// - 큰 자료를 전달할때 주소만 전달해도 모든 동작을 할 수 있다.
//
// 답- 함수의 인자로 *를 사용하여 쓸데없는 복사를 방지하려고 사용한다.

int main()
{
	

	Dragon d;

	

	cout << sizeof(Dragon) << endl;

	f(d);

	save();
	
}



--------------------------------------------------
Fri Sep  8 14:02:20 2017
--------------------------------------------------

//-------------------------------------------------------------------------------------------------------
//2017.2 C++               월45금56	                    9.4 월요일                  9.1금요일 (1주 2)
//한 학기 강의를 저장할 수 있도록 save()를 만듬
//
//9.2 - 한 학기 강의를 저장할 수 있도록 save()를 만듦.
//9.4 - file 분리,
//    - CPP I/O, cin, cout
//    - 두 변수값의 교환 , pointer
//9.8 - 참조(reference)
//    - namespace, 선언, 메모리 , auto , decltype
//자료형과 변수
//지역변수 전역변수 메모리
//랜덤엔진과 랜덤넘버 새성
//qsort 정렬
//-------------------------------------------------------------------------------------------------------

#include <iostream>
#include "save.h"   //save 함수의 선언은 여기에!


using namespace std;
void save();		// save()라는 함수를 선언(decalraration)


//cin, cout,     cerr, clog 라는 4개의 스트림 객체가 자동으로 생성된다. cin 빼고는 모니터와 관련이 있다.

//포인터는 왜 사용하나요?
// -실제 데이터는 1,2,4,8바이터가 아니다.
// - 함수에 전달되는 인자가 그냥 전달하면 복사가 되어 전달된다.
// - 큰 자료를 전달할때 주소만 전달해도 모든 동작을 할 수 있다.
//
// 답- 함수의 인자로 *를 사용하여 쓸데없는 복사를 방지하려고 사용한다.


//C의 포인터를 대치하는 C++의 참조


int main()
{
	
	int a{ 10 };

	int& r = a;

	r = 123;

	cout << a << endl;
	

	

	
	save();
	
}



--------------------------------------------------
Fri Sep  8 14:33:12 2017
--------------------------------------------------

//-------------------------------------------------------------------------------------------------------
//2017.2 C++               월45금56	                    9.4 월요일                  9.1금요일 (1주 2)
//한 학기 강의를 저장할 수 있도록 save()를 만듬
//
//9.2 - 한 학기 강의를 저장할 수 있도록 save()를 만듦.
//9.4 - file 분리,
//    - CPP I/O, cin, cout
//    - 두 변수값의 교환 , pointer
//9.8 - 참조(reference)
//    - namespace, 선언, 메모리 , auto , decltype
//자료형과 변수
//지역변수 전역변수 메모리
//랜덤엔진과 랜덤넘버 새성
//qsort 정렬
//-------------------------------------------------------------------------------------------------------

#include <iostream>
#include "save.h"   //save 함수의 선언은 여기에!


using namespace std;
void save();		// save()라는 함수를 선언(decalraration)

//C의 포인터를 대치하는 C++의 참조

//참조는 언제 사용하는가
// - 어떤객체를 함수의 인자로 전달하면 복사되어 전달된다.
// - 사용자가 만든 자료(class)는 크기가 크다.
// - 사용자가 만든 자료를 함수로 전달하면 복사된다.
// - 원본으로 작업하면 충분한데 복사본을 만들 이유가 없다.
// - 복사본을 만든다는 것은 메모리를 사용한다는 뜻이다.
//
// *참조는 객체를 함수로 전달할때 복사되지 아않도록 하는 용도로 사용한다.

int main()
{
	
	

	
	

	
	save();
	
}



--------------------------------------------------
Fri Sep  8 14:40:55 2017
--------------------------------------------------

//-------------------------------------------------------------------------------------------------------
//2017.2 C++               월45금56	                    9.4 월요일                  9.1금요일 (1주 2)
//한 학기 강의를 저장할 수 있도록 save()를 만듬
//
//9.2 - 한 학기 강의를 저장할 수 있도록 save()를 만듦.
//9.4 - file 분리,
//    - CPP I/O, cin, cout
//    - 두 변수값의 교환 , pointer
//9.8 - 참조(reference)
//    - namespace, 선언, 메모리 , auto , decltype
//자료형과 변수
//지역변수 전역변수 메모리
//랜덤엔진과 랜덤넘버 새성
//qsort 정렬
//-------------------------------------------------------------------------------------------------------

#include <iostream>
#include "save.h"   //save 함수의 선언은 여기에!


using namespace std;
void save();		// save()라는 함수를 선언(decalraration)

//지역변수와 전역변수

//지역변수는 무엇인가요? - 지역이란 {}로 구분된 공간을 의미함


int a=10;//전역변수 - DATA 영역에 생성, 0으로 초기화

int main()
{
	{
	int a=20; //지역변수 - STACK에 생성
	cout << a << endl;
    }
	
	cout << a << endl;
	{
		int a = 30; //지역변수 - STACK에 생성
		cout << a << endl;
	}
	
	save();
	
}



--------------------------------------------------
Fri Sep  8 14:43:00 2017
--------------------------------------------------

//-------------------------------------------------------------------------------------------------------
//2017.2 C++               월45금56	                    9.4 월요일                  9.1금요일 (1주 2)
//한 학기 강의를 저장할 수 있도록 save()를 만듬
//
//9.2 - 한 학기 강의를 저장할 수 있도록 save()를 만듦.
//9.4 - file 분리,
//    - CPP I/O, cin, cout
//    - 두 변수값의 교환 , pointer
//9.8 - 참조(reference)
//    - namespace, 선언, 메모리 , auto , decltype
//자료형과 변수
//지역변수 전역변수 메모리
//랜덤엔진과 랜덤넘버 새성
//qsort 정렬
//-------------------------------------------------------------------------------------------------------

#include <iostream>
#include "save.h"   //save 함수의 선언은 여기에!


using namespace std;
void save();		// save()라는 함수를 선언(decalraration)

//지역변수와 전역변수

//지역변수는 무엇인가요? - 지역이란 {}로 구분된 공간을 의미함


int a=10;//전역변수 - DATA 영역에 생성, 0으로 초기화

int main()
{
	{
	int a=20; //지역변수 - STACK에 생성
	cout << a << endl;
	cout << ::a << endl; //범위지정 연산자
    }
	
	cout << a << endl;
	
	
	save();
	
}



--------------------------------------------------
Fri Sep  8 14:48:40 2017
--------------------------------------------------

//-------------------------------------------------------------------------------------------------------
//2017.2 C++               월45금56	                    9.4 월요일                  9.1금요일 (1주 2)
//한 학기 강의를 저장할 수 있도록 save()를 만듬
//
//9.2 - 한 학기 강의를 저장할 수 있도록 save()를 만듦.
//9.4 - file 분리,
//    - CPP I/O, cin, cout
//    - 두 변수값의 교환 , pointer
//9.8 - 참조(reference)
//    - namespace, 선언, 메모리 , auto , decltype
//자료형과 변수
//지역변수 전역변수 메모리
//랜덤엔진과 랜덤넘버 새성
//qsort 정렬
//-------------------------------------------------------------------------------------------------------

#include <iostream>
#include "save.h"   //save 함수의 선언은 여기에!


using namespace std;
void save();		// save()라는 함수를 선언(decalraration)

//C++에서 랜덤넘버 생성방법
//1. 랜덤엔진을 선택한다
//2. 생성분포를 선택한다
//3. 분포와 엔진을 조합하여 랜덤넘버를 생성한다.

int main()
{
	for (int i = 0; i<100; ++i)
		cout << rand() % 1000 + 1 << " ";
	cout << endl;

	
	save();
	
}



--------------------------------------------------
Fri Sep  8 14:55:56 2017
--------------------------------------------------

//-------------------------------------------------------------------------------------------------------
//2017.2 C++               월45금56	                    9.4 월요일                  9.1금요일 (1주 2)
//한 학기 강의를 저장할 수 있도록 save()를 만듬
//
//9.2 - 한 학기 강의를 저장할 수 있도록 save()를 만듦.
//9.4 - file 분리,
//    - CPP I/O, cin, cout
//    - 두 변수값의 교환 , pointer
//9.8 - 참조(reference)
//    - namespace, 선언, 메모리 , auto , decltype
//자료형과 변수
//지역변수 전역변수 메모리
//랜덤엔진과 랜덤넘버 새성
//qsort 정렬
//-------------------------------------------------------------------------------------------------------

#include <iostream>
#include "save.h"   //save 함수의 선언은 여기에!
#include <random>

using namespace std;
void save();		// save()라는 함수를 선언(decalraration)

//C++에서 랜덤넘버 생성방법
//1. 랜덤엔진을 선택한다
//2. 생성분포를 선택한다
//3. 분포와 엔진을 조합하여 랜덤넘버를 생성한다.

int main()
{
	//랜덤엔진 선택
	default_random_engine dre;
	uniform_int_distribution<int> uid;

	for (int i = 0; i < 100; ++i)
		cout << uid(dre) << " ";
	cout << endl;
	save();
	
}



--------------------------------------------------
Fri Sep  8 14:56:20 2017
--------------------------------------------------

//-------------------------------------------------------------------------------------------------------
//2017.2 C++               월45금56	                    9.4 월요일                  9.1금요일 (1주 2)
//한 학기 강의를 저장할 수 있도록 save()를 만듬
//
//9.2 - 한 학기 강의를 저장할 수 있도록 save()를 만듦.
//9.4 - file 분리,
//    - CPP I/O, cin, cout
//    - 두 변수값의 교환 , pointer
//9.8 - 참조(reference)
//    - namespace, 선언, 메모리 , auto , decltype
//자료형과 변수
//지역변수 전역변수 메모리
//랜덤엔진과 랜덤넘버 새성
//qsort 정렬
//-------------------------------------------------------------------------------------------------------

#include <iostream>
#include "save.h"   //save 함수의 선언은 여기에!
#include <random>

using namespace std;
void save();		// save()라는 함수를 선언(decalraration)

//C++에서 랜덤넘버 생성방법
//1. 랜덤엔진을 선택한다
//2. 생성분포를 선택한다
//3. 분포와 엔진을 조합하여 랜덤넘버를 생성한다.

int main()
{
	//랜덤엔진 선택
	default_random_engine dre;
	uniform_int_distribution<int> uid(0.1000);

	for (int i = 0; i < 100; ++i)
		cout << uid(dre) << " ";
	cout << endl;
	save();
	
}



--------------------------------------------------
Fri Sep  8 14:56:34 2017
--------------------------------------------------

//-------------------------------------------------------------------------------------------------------
//2017.2 C++               월45금56	                    9.4 월요일                  9.1금요일 (1주 2)
//한 학기 강의를 저장할 수 있도록 save()를 만듬
//
//9.2 - 한 학기 강의를 저장할 수 있도록 save()를 만듦.
//9.4 - file 분리,
//    - CPP I/O, cin, cout
//    - 두 변수값의 교환 , pointer
//9.8 - 참조(reference)
//    - namespace, 선언, 메모리 , auto , decltype
//자료형과 변수
//지역변수 전역변수 메모리
//랜덤엔진과 랜덤넘버 새성
//qsort 정렬
//-------------------------------------------------------------------------------------------------------

#include <iostream>
#include "save.h"   //save 함수의 선언은 여기에!
#include <random>

using namespace std;
void save();		// save()라는 함수를 선언(decalraration)

//C++에서 랜덤넘버 생성방법
//1. 랜덤엔진을 선택한다
//2. 생성분포를 선택한다
//3. 분포와 엔진을 조합하여 랜덤넘버를 생성한다.

int main()
{
	//랜덤엔진 선택
	default_random_engine dre;
	uniform_int_distribution<int> uid(0,1000);

	for (int i = 0; i < 100; ++i)
		cout << uid(dre) << " ";
	cout << endl;
	save();
	
}



--------------------------------------------------
Sat Sep  9 12:10:32 2017
--------------------------------------------------

//-------------------------------------------------------------------------------------------------------
//2017.2 C++               월45금56	                    9.4 월요일                  9.1금요일 (1주 2)
//한 학기 강의를 저장할 수 있도록 save()를 만듬
//
//9.2 - 한 학기 강의를 저장할 수 있도록 save()를 만듦.
//9.4 - file 분리,
//    - CPP I/O, cin, cout
//    - 두 변수값의 교환 , pointer
//9.8 - 참조(reference)
//    - namespace, 선언, 메모리 , auto , decltype
//자료형과 변수
//지역변수 전역변수 메모리
//랜덤엔진과 랜덤넘버 새성
//qsort 정렬
//
//숙제 - qsort, 정렬이란 무엇인가? 찾아서 읽어보자.
//     - 검사따윈 안함
//-------------------------------------------------------------------------------------------------------

#include <iostream>
#include "save.h"   //save 함수의 선언은 여기에!
#include <random>
#include <stdlib.h>
#include <stdio.h>

using namespace std;
void save();		// save()라는 함수를 선언(decalraration)

//C++에서 랜덤넘버 생성방법
//1. 랜덤엔진을 선택한다
//2. 생성분포를 선택한다
//3. 분포와 엔진을 조합하여 랜덤넘버를 생성한다.

//[연습]
//1. 랜덤정수를 메모리에 저장하라
//2. 저장된 정수를 정렬하라. qsort()를 사용할것
//3. 정렬된 값을 화면에 출력하라

int compare(const void *first,const void *second)
{
	if (*(int*)first > *(int*)second)
		return 1;
	else if (*(int*)first < *(int*)second)
		return -1;
	else
		return 0;
}


int main()
{
	//랜덤엔진 선택
	default_random_engine dre;
	uniform_int_distribution<int> uid(0,1000);

	int num[100];
	int num_size = sizeof(num)/ sizeof(int);
	
	for (int i = 0; i < 100; ++i)
		num[i] = uid(dre);

	qsort(num, num_size, sizeof(int), compare);

	for (int j = 0; j < 100; ++j)
		cout << num[j] << " ";
	cout <<endl;

	
	/*
	for(int j=0; j<100 - 1; ++j){

	*/
   save();
}



--------------------------------------------------
Mon Sep 11 12:39:43 2017
--------------------------------------------------

//-------------------------------------------------------------------------------------------------------
//2017.2 C++               월45금56	                    9.4 월요일                  9.1금요일 (1주 2)
//한 학기 강의를 저장할 수 있도록 save()를 만듬
//
//9.2 - 한 학기 강의를 저장할 수 있도록 save()를 만듦.
//9.4 - file 분리,
//    - CPP I/O, cin, cout
//    - 두 변수값의 교환 , pointer
//9.8 - 참조(reference)
//    - namespace, 선언, 메모리 , auto , decltype
//
//9.11 - qsort, 정렬이란 무엇인가? 찾아서 읽어보자.
//-------------------------------------------------------------------------------------------------------

#include <iostream>
#include "save.h"   //save 함수의 선언은 여기에!
#include <random>
#include <stdlib.h>
#include <stdio.h>

using namespace std;
void save();		// save()라는 함수를 선언(decalraration)

//C++에서 랜덤넘버 생성방법
//1. 랜덤엔진을 선택한다
//2. 생성분포를 선택한다
//3. 분포와 엔진을 조합하여 랜덤넘버를 생성한다.

//[연습]
//1. 랜덤정수를 메모리에 저장하라
//2. 저장된 정수를 정렬하라. qsort()를 사용할것
//3. 정렬된 값을 화면에 출력하라

int compare(const void *first,const void *second)
{
	if (*(int*)first > *(int*)second)
		return 1;
	else if (*(int*)first < *(int*)second)
		return -1;
	else
		return 0;
}


int main()
{
	//랜덤엔진 선택
	default_random_engine dre;
	uniform_int_distribution<int> uid(0,1000);

	int num[100];
	int num_size = sizeof(num)/ sizeof(int);
	
	for (int i = 0; i < 100; ++i)
		num[i] = uid(dre);

	qsort(num, num_size, sizeof(int), compare);

	for (int j = 0; j < 100; ++j)
		cout << num[j] << " ";
	cout <<endl;

	
	/*
	for(int j=0; j<100 - 1; ++j){

	*/
   save();
}



--------------------------------------------------
Mon Sep 11 13:13:32 2017
--------------------------------------------------

//-------------------------------------------------------------------------------------------------------
//2017.2 C++               월45금56	                    9.4 월요일                  9.1금요일 (1주 2)
//한 학기 강의를 저장할 수 있도록 save()를 만듬
//
//9.2 - 한 학기 강의를 저장할 수 있도록 save()를 만듦.
//9.4 - file 분리,
//    - CPP I/O, cin, cout
//    - 두 변수값의 교환 , pointer
//9.8 - 참조(reference)
//    - namespace, 선언, 메모리 , auto , decltype
//
//9.11 - qsort, 정렬이란 무엇인가? 찾아서 읽어보자.
//-------------------------------------------------------------------------------------------------------

#include <iostream>
#include "save.h"   //save 함수의 선언은 여기에!
#include <random>
#include <stdlib.h>
#include <stdio.h>

using namespace std;
void save();		// save()라는 함수를 선언(decalraration)

//C++에서 랜덤넘버 생성방법
//1. 랜덤엔진을 선택한다
//2. 생성분포를 선택한다
//3. 분포와 엔진을 조합하여 랜덤넘버를 생성한다.

//[연습]
//1. 랜덤정수를 메모리에 저장하라
//2. 저장된 정수를 정렬하라. qsort()를 사용할것
//3. 정렬된 값을 화면에 출력하라

//const - 읽기 전용 메모리(쓸 수 없다)
//void - 어떤 형식이든 자유롭게 변환할 수 있다.
int compare(const void *first,const void *second)
{
	if (*(int*)first > *(int*)second)  // 역참조 *(int *)
		return -1;
	else if (*(int*)first < *(int*)second)
		return 1;
	else
		return 0;
}


int main()
{
	//랜덤엔진 선택
	default_random_engine dre;
	uniform_int_distribution<int> uid(0,1000);

	int num[100];
	int num_size = sizeof(num)/ sizeof(int);
	
	for (int i = 0; i < 100; ++i)
		num[i] = uid(dre);

	qsort(num, num_size, sizeof(int), compare);

	for (int j = 0; j < 100; ++j)
		cout << num[j] << " ";
	cout <<endl;

	
	/*
	for(int j=0; j<100 - 1; ++j){

	*/
   save();
}



--------------------------------------------------
Mon Sep 11 13:13:45 2017
--------------------------------------------------

//-------------------------------------------------------------------------------------------------------
//2017.2 C++               월45금56	                    9.4 월요일                  9.1금요일 (1주 2)
//한 학기 강의를 저장할 수 있도록 save()를 만듬
//
//9.2 - 한 학기 강의를 저장할 수 있도록 save()를 만듦.
//9.4 - file 분리,
//    - CPP I/O, cin, cout
//    - 두 변수값의 교환 , pointer
//9.8 - 참조(reference)
//    - namespace, 선언, 메모리 , auto , decltype
//
//9.11 - qsort, 정렬이란 무엇인가? 찾아서 읽어보자.
//-------------------------------------------------------------------------------------------------------

#include <iostream>
#include "save.h"   //save 함수의 선언은 여기에!
#include <random>
#include <stdlib.h>
#include <stdio.h>

using namespace std;
void save();		// save()라는 함수를 선언(decalraration)

//C++에서 랜덤넘버 생성방법
//1. 랜덤엔진을 선택한다
//2. 생성분포를 선택한다
//3. 분포와 엔진을 조합하여 랜덤넘버를 생성한다.

//[연습]
//1. 랜덤정수를 메모리에 저장하라
//2. 저장된 정수를 정렬하라. qsort()를 사용할것
//3. 정렬된 값을 화면에 출력하라

//const - 읽기 전용 메모리(쓸 수 없다)
//void - 어떤 형식이든 자유롭게 변환할 수 있다.
int compare(const void *first,const void *second)
{
	if (*(int*)first > *(int*)second)  // 역참조 *(int *)
		return 1;
	else if (*(int*)first < *(int*)second)
		return -1;
	else
		return 0;
}


int main()
{
	//랜덤엔진 선택
	default_random_engine dre;
	uniform_int_distribution<int> uid(0,1000);

	int num[100];
	int num_size = sizeof(num)/ sizeof(int);
	
	for (int i = 0; i < 100; ++i)
		num[i] = uid(dre);

	qsort(num, num_size, sizeof(int), compare);

	for (int j = 0; j < 100; ++j)
		cout << num[j] << " ";
	cout <<endl;

	
	/*
	for(int j=0; j<100 - 1; ++j){

	*/
   save();
}



--------------------------------------------------
Mon Sep 11 13:14:06 2017
--------------------------------------------------

//-------------------------------------------------------------------------------------------------------
//2017.2 C++               월45금56	                    9.4 월요일                  9.1금요일 (1주 2)
//한 학기 강의를 저장할 수 있도록 save()를 만듬
//
//9.2 - 한 학기 강의를 저장할 수 있도록 save()를 만듦.
//9.4 - file 분리,
//    - CPP I/O, cin, cout
//    - 두 변수값의 교환 , pointer
//9.8 - 참조(reference)
//    - namespace, 선언, 메모리 , auto , decltype
//
//9.11 - qsort, 정렬이란 무엇인가? 찾아서 읽어보자.
//-------------------------------------------------------------------------------------------------------

#include <iostream>
#include "save.h"   //save 함수의 선언은 여기에!
#include <random>
#include <stdlib.h>
#include <stdio.h>

using namespace std;
void save();		// save()라는 함수를 선언(decalraration)

//C++에서 랜덤넘버 생성방법
//1. 랜덤엔진을 선택한다
//2. 생성분포를 선택한다
//3. 분포와 엔진을 조합하여 랜덤넘버를 생성한다.

//[연습]
//1. 랜덤정수를 메모리에 저장하라
//2. 저장된 정수를 정렬하라. qsort()를 사용할것
//3. 정렬된 값을 화면에 출력하라

//const - 읽기 전용 메모리(쓸 수 없다)
//void - 어떤 형식이든 자유롭게 변환할 수 있다.
int compare(const void *first,const void *second)
{
	if (*(int*)first > *(int*)second)  // 역참조 *(int *)
		return 1;
	else if (*(int*)first < *(int*)second)
		return -1;
	else
		return 0;
}


int main()
{
	//랜덤엔진 선택
	default_random_engine dre;
	uniform_int_distribution<int> uid(0,1000);

	int num[100];
	int num_size = sizeof(num)/ sizeof(int);
	
	for (int i = 0; i < 100; ++i)
		num[i] = uid(dre);

	qsort(num, num_size, sizeof(int), compare);

	for (int j = 0; j < 100; ++j)
		cout << num[j] << "\t";
	cout <<endl;

	
	/*
	for(int j=0; j<100 - 1; ++j){

	*/
   save();
}



--------------------------------------------------
Mon Sep 11 13:14:31 2017
--------------------------------------------------

//-------------------------------------------------------------------------------------------------------
//2017.2 C++               월45금56	                    9.4 월요일                  9.1금요일 (1주 2)
//한 학기 강의를 저장할 수 있도록 save()를 만듬
//
//9.2 - 한 학기 강의를 저장할 수 있도록 save()를 만듦.
//9.4 - file 분리,
//    - CPP I/O, cin, cout
//    - 두 변수값의 교환 , pointer
//9.8 - 참조(reference)
//    - namespace, 선언, 메모리 , auto , decltype
//
//9.11 - qsort, 정렬이란 무엇인가? 찾아서 읽어보자.
//-------------------------------------------------------------------------------------------------------

#include <iostream>
#include "save.h"   //save 함수의 선언은 여기에!
#include <random>
#include <stdlib.h>
#include <stdio.h>

using namespace std;
void save();		// save()라는 함수를 선언(decalraration)

//C++에서 랜덤넘버 생성방법
//1. 랜덤엔진을 선택한다
//2. 생성분포를 선택한다
//3. 분포와 엔진을 조합하여 랜덤넘버를 생성한다.

//[연습]
//1. 랜덤정수를 메모리에 저장하라
//2. 저장된 정수를 정렬하라. qsort()를 사용할것
//3. 정렬된 값을 화면에 출력하라

//const - 읽기 전용 메모리(쓸 수 없다)
//void - 어떤 형식이든 자유롭게 변환할 수 있다.
int compare(const void *first,const void *second)
{
	if (*(int*)first > *(int*)second)  // 역참조 *(int *)
		return 1;
	else if (*(int*)first < *(int*)second)
		return -1;
	else
		return 0;
}


int main()
{
	//랜덤엔진 선택
	default_random_engine dre;
	uniform_int_distribution<int> uid(0,1000);

	int num[100];
	int num_size = sizeof(num)/ sizeof(int);
	
	for (int i = 0; i < 100; ++i)
		num[i] = uid(dre);

	qsort(num, num_size, sizeof(int), compare);

	for (int j = 0; j < 100; ++j)
		cout << num[j] << "\n";
	cout <<endl;

	
	/*
	for(int j=0; j<100 - 1; ++j){

	*/
   save();
}



--------------------------------------------------
Mon Sep 11 13:35:24 2017
--------------------------------------------------

//-------------------------------------------------------------------------------------------------------
//2017.2 C++               월45금56	                    9.4 월요일                  9.1금요일 (1주 2)
//한 학기 강의를 저장할 수 있도록 save()를 만듬
//
//9.2 - 한 학기 강의를 저장할 수 있도록 save()를 만듦.
//9.4 - file 분리,
//    - CPP I/O, cin, cout
//    - 두 변수값의 교환 , pointer
//9.8 - 참조(reference)
//    - namespace, 선언, 메모리 , auto , decltype
//
//9.11 - qsort, 정렬이란 무엇인가? 찾아서 읽어보자.
//       const - 메모리의 내용을 읽을 수만 있다.
//       void* - 이 번지의 내용은 알아서 타입변환해라
//-------------------------------------------------------------------------------------------------------

#include <iostream>
#include "save.h"   //save 함수의 선언은 여기에!
#include <random>
#include <stdlib.h>
#include <stdio.h>
#include <stdio.h>

using namespace std;
void save();		// save()라는 함수를 선언(decalraration)

int compare(const void*, const void*);

int compare(const void *first, const void *second)
{
	return strcmp((char*)first, (char*)second);
}
int main()
{
	char a[] = "C++ is a very powerful programming language";

	// qsort 를 이용하여 배열을 정렬하고 화면에 정렬된 문자들을 출력하라

	qsort(a,strlen(a),sizeof(char),compare);

   save();
}



--------------------------------------------------
Mon Sep 11 13:36:06 2017
--------------------------------------------------

//-------------------------------------------------------------------------------------------------------
//2017.2 C++               월45금56	                    9.4 월요일                  9.1금요일 (1주 2)
//한 학기 강의를 저장할 수 있도록 save()를 만듬
//
//9.2 - 한 학기 강의를 저장할 수 있도록 save()를 만듦.
//9.4 - file 분리,
//    - CPP I/O, cin, cout
//    - 두 변수값의 교환 , pointer
//9.8 - 참조(reference)
//    - namespace, 선언, 메모리 , auto , decltype
//
//9.11 - qsort, 정렬이란 무엇인가? 찾아서 읽어보자.
//       const - 메모리의 내용을 읽을 수만 있다.
//       void* - 이 번지의 내용은 알아서 타입변환해라
//-------------------------------------------------------------------------------------------------------

#include <iostream>
#include "save.h"   //save 함수의 선언은 여기에!
#include <random>
#include <stdlib.h>
#include <stdio.h>
#include <stdio.h>

using namespace std;
void save();		// save()라는 함수를 선언(decalraration)

int compare(const void*, const void*);

int compare(const void *first, const void *second)
{
	return strcmp((char*)first, (char*)second);
}
int main()
{
	char a[] = "C++ is a very powerful programming language";

	// qsort 를 이용하여 배열을 정렬하고 화면에 정렬된 문자들을 출력하라

	qsort(a,strlen(a),sizeof(char),compare);

	cout << a << endl;

   save();
}



--------------------------------------------------
Mon Sep 11 13:48:53 2017
--------------------------------------------------

//-------------------------------------------------------------------------------------------------------
//2017.2 C++               월45금56	                    9.4 월요일                  9.1금요일 (1주 2)
//한 학기 강의를 저장할 수 있도록 save()를 만듬
//
//9.2 - 한 학기 강의를 저장할 수 있도록 save()를 만듦.
//9.4 - file 분리,
//    - CPP I/O, cin, cout
//    - 두 변수값의 교환 , pointer
//9.8 - 참조(reference)
//    - namespace, 선언, 메모리 , auto , decltype
//
//9.11 - qsort, 정렬이란 무엇인가? 찾아서 읽어보자.
//       const - 메모리의 내용을 읽을 수만 있다.
//       void* - 이 번지의 내용은 알아서 타입변환해라
//-------------------------------------------------------------------------------------------------------

#include <iostream>
#include "save.h"   //save 함수의 선언은 여기에!
#include <random>
#include <stdlib.h>
#include <stdio.h>
#include <stdio.h>

using namespace std;
void save();		// save()라는 함수를 선언(decalraration)
int compare(const void*, const void*);

int comp(const void* a, const void* b)
{
	int x = *(int*)a;
	int y = *(int*)b;


	if (x > y)
		return 1;
	if (x < y)
		return -1;
	return 0;
}

// 임의의 값으 갖는 정수 1000개를 생성하고 오름차순으로 정렬한 후 출력하라.

int main()
{
	default_random_engine dre;
	uniform_int_distribution<> uid(1,10000);

	int num[1000];

	for (int i = 0; i < 1000; ++i)
		num[i] = uid(dre);
	qsort(num, 1000, 4, comp);

	
	for (int i = 0; i < 1000; ++i)
		cout << num[i] << "\t\t";
	cout << endl;
   save();
}



--------------------------------------------------
Mon Sep 11 13:59:51 2017
--------------------------------------------------

//-------------------------------------------------------------------------------------------------------
//2017.2 C++               월45금56	                    9.4 월요일                  9.1금요일 (1주 2)
//한 학기 강의를 저장할 수 있도록 save()를 만듬
//
//9.2 - 한 학기 강의를 저장할 수 있도록 save()를 만듦.
//9.4 - file 분리,
//    - CPP I/O, cin, cout
//    - 두 변수값의 교환 , pointer
//9.8 - 참조(reference)
//    - namespace, 선언, 메모리 , auto , decltype
//
//9.11 - qsort, 정렬이란 무엇인가? 찾아서 읽어보자.
//       const - 메모리의 내용을 읽을 수만 있다.
//       void* - 이 번지의 내용은 알아서 타입변환해라
//-------------------------------------------------------------------------------------------------------

#include <iostream>
#include "save.h"   //save 함수의 선언은 여기에!
#include <random>
#include <stdlib.h>
#include <stdio.h>
#include <stdio.h>

const int NUM = 100000;

using namespace std;
void save();		// save()라는 함수를 선언(decalraration)
int comp(const void*, const void*);

int comp(const void* a, const void* b)
{
	int x = *(int*)a;
	int y = *(int*)b;


	if (x > y)
		return 1;
	if (x < y)
		return -1;
	return 0;
}

// 임의의 값으 갖는 정수 1000개를 생성하고 오름차순으로 정렬한 후 출력하라.
// 정수 100000 개를 정렬한후 출력하라.
int main()
{
	default_random_engine dre;
	uniform_int_distribution<> uid(1,NUM);

	int num[NUM];

	for (int i = 0; i < NUM; ++i)
		num[i] = uid(dre);
	qsort(num, NUM, 4, comp);

// 출력은 앞에서 100개만
	for (int i = 0; i < 100; ++i)
		cout << num[i] << "\t\t";
	cout << endl;
   save();
}



--------------------------------------------------
Mon Sep 11 14:00:24 2017
--------------------------------------------------

//-------------------------------------------------------------------------------------------------------
//2017.2 C++               월45금56	                    9.4 월요일                  9.1금요일 (1주 2)
//한 학기 강의를 저장할 수 있도록 save()를 만듬
//
//9.2 - 한 학기 강의를 저장할 수 있도록 save()를 만듦.
//9.4 - file 분리,
//    - CPP I/O, cin, cout
//    - 두 변수값의 교환 , pointer
//9.8 - 참조(reference)
//    - namespace, 선언, 메모리 , auto , decltype
//
//9.11 - qsort, 정렬이란 무엇인가? 찾아서 읽어보자.
//       const - 메모리의 내용을 읽을 수만 있다.
//       void* - 이 번지의 내용은 알아서 타입변환해라
//-------------------------------------------------------------------------------------------------------

#include <iostream>
#include "save.h"   //save 함수의 선언은 여기에!
#include <random>
#include <stdlib.h>
#include <stdio.h>
#include <stdio.h>

const int NUM = 100000;

using namespace std;
void save();		// save()라는 함수를 선언(decalraration)
int comp(const void*, const void*);

int comp(const void* a, const void* b)
{
	int x = *(int*)a;
	int y = *(int*)b;


	if (x > y)
		return 1;
	if (x < y)
		return -1;
	return 0;
}

// 임의의 값으 갖는 정수 1000개를 생성하고 오름차순으로 정렬한 후 출력하라.
// 정수 100000 개를 정렬한후 출력하라.
int main()
{
	default_random_engine dre;
	uniform_int_distribution<> uid(1,NUM);

	int num[NUM];

	for (int i = 0; i < NUM; ++i)
		num[i] = uid(dre);
	qsort(num, NUM, 4, comp);

// 출력은 앞에서 100개만
	for (int i = 0; i < 100; ++i)
		cout << num[i] << "\t\t";
	cout << endl;
   save();
}



--------------------------------------------------
Mon Sep 11 14:05:43 2017
--------------------------------------------------

//-------------------------------------------------------------------------------------------------------
//2017.2 C++               월45금56	                    9.4 월요일                  9.1금요일 (1주 2)
//한 학기 강의를 저장할 수 있도록 save()를 만듬
//
//9.2 - 한 학기 강의를 저장할 수 있도록 save()를 만듦.
//9.4 - file 분리,
//    - CPP I/O, cin, cout
//    - 두 변수값의 교환 , pointer
//9.8 - 참조(reference)
//    - namespace, 선언, 메모리 , auto , decltype
//
//9.11 - qsort, 정렬이란 무엇인가? 찾아서 읽어보자.
//       const - 메모리의 내용을 읽을 수만 있다.
//       void* - 이 번지의 내용은 알아서 타입변환해라
//-------------------------------------------------------------------------------------------------------

#include <iostream>
#include "save.h"   //save 함수의 선언은 여기에!
#include <random>
#include <stdlib.h>
#include <stdio.h>
#include <stdio.h>
#include <ctime>
const int NUM = 13;

using namespace std;
void save();		// save()라는 함수를 선언(decalraration)
int comp(const void*, const void*);

int comp(const void* a, const void* b)
{
	int x = *(int*)a;
	int y = *(int*)b;


	if (x > y)
		return 1;
	if (x < y)
		return -1;
	return 0;
}

// 임의의 값으 갖는 정수 1000개를 생성하고 오름차순으로 정렬한 후 출력하라.
// 정수 100000 개를 정렬한후 출력하라.
int main()
{
	default_random_engine dre(time(nullptr));
	uniform_int_distribution<> uid(1,NUM);

	int num[NUM];

	for (int i = 0; i < NUM; ++i)
		num[i] = uid(dre);
	qsort(num, NUM, 4, comp);

// 출력은 앞에서 100개만
	for (int i = 0; i < 100; ++i)
		cout << num[i] << "\t\t";
	cout << endl;
   save();
}



--------------------------------------------------
Mon Sep 11 14:06:03 2017
--------------------------------------------------

//-------------------------------------------------------------------------------------------------------
//2017.2 C++               월45금56	                    9.4 월요일                  9.1금요일 (1주 2)
//한 학기 강의를 저장할 수 있도록 save()를 만듬
//
//9.2 - 한 학기 강의를 저장할 수 있도록 save()를 만듦.
//9.4 - file 분리,
//    - CPP I/O, cin, cout
//    - 두 변수값의 교환 , pointer
//9.8 - 참조(reference)
//    - namespace, 선언, 메모리 , auto , decltype
//
//9.11 - qsort, 정렬이란 무엇인가? 찾아서 읽어보자.
//       const - 메모리의 내용을 읽을 수만 있다.
//       void* - 이 번지의 내용은 알아서 타입변환해라
//-------------------------------------------------------------------------------------------------------

#include <iostream>
#include "save.h"   //save 함수의 선언은 여기에!
#include <random>
#include <stdlib.h>
#include <stdio.h>
#include <stdio.h>
#include <ctime>
const int NUM = 130000;

using namespace std;
void save();		// save()라는 함수를 선언(decalraration)
int comp(const void*, const void*);

int comp(const void* a, const void* b)
{
	int x = *(int*)a;
	int y = *(int*)b;


	if (x > y)
		return 1;
	if (x < y)
		return -1;
	return 0;
}

// 임의의 값으 갖는 정수 1000개를 생성하고 오름차순으로 정렬한 후 출력하라.
// 정수 100000 개를 정렬한후 출력하라.
int main()
{
	default_random_engine dre(time(nullptr));
	uniform_int_distribution<> uid(1,NUM);

	int num[NUM];

	for (int i = 0; i < NUM; ++i)
		num[i] = uid(dre);
	qsort(num, NUM, 4, comp);

// 출력은 앞에서 100개만
	for (int i = 0; i < 100; ++i)
		cout << num[i] << "\t\t";
	cout << endl;
   save();
}



--------------------------------------------------
Mon Sep 11 14:07:15 2017
--------------------------------------------------

//-------------------------------------------------------------------------------------------------------
//2017.2 C++               월45금56	                    9.4 월요일                  9.1금요일 (1주 2)
//한 학기 강의를 저장할 수 있도록 save()를 만듬
//
//9.2 - 한 학기 강의를 저장할 수 있도록 save()를 만듦.
//9.4 - file 분리,
//    - CPP I/O, cin, cout
//    - 두 변수값의 교환 , pointer
//9.8 - 참조(reference)
//    - namespace, 선언, 메모리 , auto , decltype
//
//9.11 - qsort, 정렬이란 무엇인가? 찾아서 읽어보자.
//       const - 메모리의 내용을 읽을 수만 있다.
//       void* - 이 번지의 내용은 알아서 타입변환해라
//-------------------------------------------------------------------------------------------------------

#include <iostream>
#include "save.h"   //save 함수의 선언은 여기에!
#include <random>
#include <stdlib.h>
#include <stdio.h>
#include <stdio.h>
#include <ctime>
const int NUM = 255000;

using namespace std;
void save();		// save()라는 함수를 선언(decalraration)
int comp(const void*, const void*);

int comp(const void* a, const void* b)
{
	int x = *(int*)a;
	int y = *(int*)b;


	if (x > y)
		return 1;
	if (x < y)
		return -1;
	return 0;
}

// 임의의 값으 갖는 정수 1000개를 생성하고 오름차순으로 정렬한 후 출력하라.
// 정수 100000 개를 정렬한후 출력하라.
int main()
{
	default_random_engine dre(time(nullptr));
	uniform_int_distribution<> uid(1,NUM);

	int num[NUM];

	for (int i = 0; i < NUM; ++i)
		num[i] = uid(dre);
	qsort(num, NUM, 4, comp);

// 출력은 앞에서 100개만
	for (int i = 0; i < 100; ++i)
		cout << num[i] << "\t\t";
	cout << endl;
   save();
}



--------------------------------------------------
Mon Sep 11 14:07:21 2017
--------------------------------------------------

//-------------------------------------------------------------------------------------------------------
//2017.2 C++               월45금56	                    9.4 월요일                  9.1금요일 (1주 2)
//한 학기 강의를 저장할 수 있도록 save()를 만듬
//
//9.2 - 한 학기 강의를 저장할 수 있도록 save()를 만듦.
//9.4 - file 분리,
//    - CPP I/O, cin, cout
//    - 두 변수값의 교환 , pointer
//9.8 - 참조(reference)
//    - namespace, 선언, 메모리 , auto , decltype
//
//9.11 - qsort, 정렬이란 무엇인가? 찾아서 읽어보자.
//       const - 메모리의 내용을 읽을 수만 있다.
//       void* - 이 번지의 내용은 알아서 타입변환해라
//-------------------------------------------------------------------------------------------------------

#include <iostream>
#include "save.h"   //save 함수의 선언은 여기에!
#include <random>
#include <stdlib.h>
#include <stdio.h>
#include <stdio.h>
#include <ctime>
const int NUM = 255001;

using namespace std;
void save();		// save()라는 함수를 선언(decalraration)
int comp(const void*, const void*);

int comp(const void* a, const void* b)
{
	int x = *(int*)a;
	int y = *(int*)b;


	if (x > y)
		return 1;
	if (x < y)
		return -1;
	return 0;
}

// 임의의 값으 갖는 정수 1000개를 생성하고 오름차순으로 정렬한 후 출력하라.
// 정수 100000 개를 정렬한후 출력하라.
int main()
{
	default_random_engine dre(time(nullptr));
	uniform_int_distribution<> uid(1,NUM);

	int num[NUM];

	for (int i = 0; i < NUM; ++i)
		num[i] = uid(dre);
	qsort(num, NUM, 4, comp);

// 출력은 앞에서 100개만
	for (int i = 0; i < 100; ++i)
		cout << num[i] << "\t\t";
	cout << endl;
   save();
}



--------------------------------------------------
Mon Sep 11 14:07:36 2017
--------------------------------------------------

//-------------------------------------------------------------------------------------------------------
//2017.2 C++               월45금56	                    9.4 월요일                  9.1금요일 (1주 2)
//한 학기 강의를 저장할 수 있도록 save()를 만듬
//
//9.2 - 한 학기 강의를 저장할 수 있도록 save()를 만듦.
//9.4 - file 분리,
//    - CPP I/O, cin, cout
//    - 두 변수값의 교환 , pointer
//9.8 - 참조(reference)
//    - namespace, 선언, 메모리 , auto , decltype
//
//9.11 - qsort, 정렬이란 무엇인가? 찾아서 읽어보자.
//       const - 메모리의 내용을 읽을 수만 있다.
//       void* - 이 번지의 내용은 알아서 타입변환해라
//-------------------------------------------------------------------------------------------------------

#include <iostream>
#include "save.h"   //save 함수의 선언은 여기에!
#include <random>
#include <stdlib.h>
#include <stdio.h>
#include <stdio.h>
#include <ctime>
const int NUM = 26000;

using namespace std;
void save();		// save()라는 함수를 선언(decalraration)
int comp(const void*, const void*);

int comp(const void* a, const void* b)
{
	int x = *(int*)a;
	int y = *(int*)b;


	if (x > y)
		return 1;
	if (x < y)
		return -1;
	return 0;
}

// 임의의 값으 갖는 정수 1000개를 생성하고 오름차순으로 정렬한 후 출력하라.
// 정수 100000 개를 정렬한후 출력하라.
int main()
{
	default_random_engine dre(time(nullptr));
	uniform_int_distribution<> uid(1,NUM);

	int num[NUM];

	for (int i = 0; i < NUM; ++i)
		num[i] = uid(dre);
	qsort(num, NUM, 4, comp);

// 출력은 앞에서 100개만
	for (int i = 0; i < 100; ++i)
		cout << num[i] << "\t\t";
	cout << endl;
   save();
}



--------------------------------------------------
Mon Sep 11 14:07:43 2017
--------------------------------------------------

//-------------------------------------------------------------------------------------------------------
//2017.2 C++               월45금56	                    9.4 월요일                  9.1금요일 (1주 2)
//한 학기 강의를 저장할 수 있도록 save()를 만듬
//
//9.2 - 한 학기 강의를 저장할 수 있도록 save()를 만듦.
//9.4 - file 분리,
//    - CPP I/O, cin, cout
//    - 두 변수값의 교환 , pointer
//9.8 - 참조(reference)
//    - namespace, 선언, 메모리 , auto , decltype
//
//9.11 - qsort, 정렬이란 무엇인가? 찾아서 읽어보자.
//       const - 메모리의 내용을 읽을 수만 있다.
//       void* - 이 번지의 내용은 알아서 타입변환해라
//-------------------------------------------------------------------------------------------------------

#include <iostream>
#include "save.h"   //save 함수의 선언은 여기에!
#include <random>
#include <stdlib.h>
#include <stdio.h>
#include <stdio.h>
#include <ctime>
const int NUM = 30000;

using namespace std;
void save();		// save()라는 함수를 선언(decalraration)
int comp(const void*, const void*);

int comp(const void* a, const void* b)
{
	int x = *(int*)a;
	int y = *(int*)b;


	if (x > y)
		return 1;
	if (x < y)
		return -1;
	return 0;
}

// 임의의 값으 갖는 정수 1000개를 생성하고 오름차순으로 정렬한 후 출력하라.
// 정수 100000 개를 정렬한후 출력하라.
int main()
{
	default_random_engine dre(time(nullptr));
	uniform_int_distribution<> uid(1,NUM);

	int num[NUM];

	for (int i = 0; i < NUM; ++i)
		num[i] = uid(dre);
	qsort(num, NUM, 4, comp);

// 출력은 앞에서 100개만
	for (int i = 0; i < 100; ++i)
		cout << num[i] << "\t\t";
	cout << endl;
   save();
}



--------------------------------------------------
Mon Sep 11 14:08:07 2017
--------------------------------------------------

//-------------------------------------------------------------------------------------------------------
//2017.2 C++               월45금56	                    9.4 월요일                  9.1금요일 (1주 2)
//한 학기 강의를 저장할 수 있도록 save()를 만듬
//
//9.2 - 한 학기 강의를 저장할 수 있도록 save()를 만듦.
//9.4 - file 분리,
//    - CPP I/O, cin, cout
//    - 두 변수값의 교환 , pointer
//9.8 - 참조(reference)
//    - namespace, 선언, 메모리 , auto , decltype
//
//9.11 - qsort, 정렬이란 무엇인가? 찾아서 읽어보자.
//       const - 메모리의 내용을 읽을 수만 있다.
//       void* - 이 번지의 내용은 알아서 타입변환해라
//-------------------------------------------------------------------------------------------------------

#include <iostream>
#include "save.h"   //save 함수의 선언은 여기에!
#include <random>
#include <stdlib.h>
#include <stdio.h>
#include <stdio.h>
#include <ctime>
const int NUM = 255000;

using namespace std;
void save();		// save()라는 함수를 선언(decalraration)
int comp(const void*, const void*);

int comp(const void* a, const void* b)
{
	int x = *(int*)a;
	int y = *(int*)b;


	if (x > y)
		return 1;
	if (x < y)
		return -1;
	return 0;
}

// 임의의 값으 갖는 정수 1000개를 생성하고 오름차순으로 정렬한 후 출력하라.
// 정수 100000 개를 정렬한후 출력하라.
int main()
{
	default_random_engine dre(time(nullptr));
	uniform_int_distribution<> uid(1,NUM);

	int num[NUM];

	for (int i = 0; i < NUM; ++i)
		num[i] = uid(dre);
	qsort(num, NUM, 4, comp);

// 출력은 앞에서 100개만
	for (int i = 0; i < 100; ++i)
		cout << num[i] << "\t\t";
	cout << endl;
   save();
}



--------------------------------------------------
Mon Sep 11 14:09:04 2017
--------------------------------------------------

//-------------------------------------------------------------------------------------------------------
//2017.2 C++               월45금56	                    9.4 월요일                  9.1금요일 (1주 2)
//한 학기 강의를 저장할 수 있도록 save()를 만듬
//
//9.2 - 한 학기 강의를 저장할 수 있도록 save()를 만듦.
//9.4 - file 분리,
//    - CPP I/O, cin, cout
//    - 두 변수값의 교환 , pointer
//9.8 - 참조(reference)
//    - namespace, 선언, 메모리 , auto , decltype
//
//9.11 - qsort, 정렬이란 무엇인가? 찾아서 읽어보자.
//       const - 메모리의 내용을 읽을 수만 있다.
//       void* - 이 번지의 내용은 알아서 타입변환해라
//-------------------------------------------------------------------------------------------------------

#include <iostream>
#include "save.h"   //save 함수의 선언은 여기에!
#include <random>
#include <stdlib.h>
#include <stdio.h>
#include <stdio.h>
#include <ctime>
const int NUM = 255000;

using namespace std;
void save();		// save()라는 함수를 선언(decalraration)
int comp(const void*, const void*);

int comp(const void* a, const void* b)
{
	int x = *(int*)a;
	int y = *(int*)b;


	if (x > y)
		return 1;
	if (x < y)
		return -1;
	return 0;
}

// 임의의 값으 갖는 정수 1000개를 생성하고 오름차순으로 정렬한 후 출력하라.
// 정수 100000 개를 정렬한후 출력하라.
int main()
{
	default_random_engine dre(time(nullptr));
	uniform_int_distribution<> uid(1,NUM);

	int num[NUM];

	for (int i = 0; i < NUM; ++i)
		num[i] = uid(dre);
	qsort(num, NUM, 4, comp);

// 출력은 앞에서 100개만
	for (int i = 0; i < 100; ++i)
		cout << num[i] << "\t\t";
	cout << endl;
   save();
}



--------------------------------------------------
Mon Sep 11 14:09:19 2017
--------------------------------------------------

//-------------------------------------------------------------------------------------------------------
//2017.2 C++               월45금56	                    9.4 월요일                  9.1금요일 (1주 2)
//한 학기 강의를 저장할 수 있도록 save()를 만듬
//
//9.2 - 한 학기 강의를 저장할 수 있도록 save()를 만듦.
//9.4 - file 분리,
//    - CPP I/O, cin, cout
//    - 두 변수값의 교환 , pointer
//9.8 - 참조(reference)
//    - namespace, 선언, 메모리 , auto , decltype
//
//9.11 - qsort, 정렬이란 무엇인가? 찾아서 읽어보자.
//       const - 메모리의 내용을 읽을 수만 있다.
//       void* - 이 번지의 내용은 알아서 타입변환해라
//-------------------------------------------------------------------------------------------------------

#include <iostream>
#include "save.h"   //save 함수의 선언은 여기에!
#include <random>
#include <stdlib.h>
#include <stdio.h>
#include <stdio.h>
#include <ctime>
const int NUM = 255300;

using namespace std;
void save();		// save()라는 함수를 선언(decalraration)
int comp(const void*, const void*);

int comp(const void* a, const void* b)
{
	int x = *(int*)a;
	int y = *(int*)b;


	if (x > y)
		return 1;
	if (x < y)
		return -1;
	return 0;
}

// 임의의 값으 갖는 정수 1000개를 생성하고 오름차순으로 정렬한 후 출력하라.
// 정수 100000 개를 정렬한후 출력하라.
int main()
{
	default_random_engine dre(time(nullptr));
	uniform_int_distribution<> uid(1,NUM);

	int num[NUM];

	for (int i = 0; i < NUM; ++i)
		num[i] = uid(dre);
	qsort(num, NUM, 4, comp);

// 출력은 앞에서 100개만
	for (int i = 0; i < 100; ++i)
		cout << num[i] << "\t\t";
	cout << endl;
   save();
}



--------------------------------------------------
Mon Sep 11 14:11:37 2017
--------------------------------------------------

//-------------------------------------------------------------------------------------------------------
//2017.2 C++               월45금56	                    9.4 월요일                  9.1금요일 (1주 2)
//한 학기 강의를 저장할 수 있도록 save()를 만듬
//
//9.2 - 한 학기 강의를 저장할 수 있도록 save()를 만듦.
//9.4 - file 분리,
//    - CPP I/O, cin, cout
//    - 두 변수값의 교환 , pointer
//9.8 - 참조(reference)
//    - namespace, 선언, 메모리 , auto , decltype
//
//9.11 - qsort, 정렬이란 무엇인가? 찾아서 읽어보자.
//       const - 메모리의 내용을 읽을 수만 있다.
//       void* - 이 번지의 내용은 알아서 타입변환해라
//-------------------------------------------------------------------------------------------------------

#include <iostream>
#include "save.h"   //save 함수의 선언은 여기에!
#include <random>
#include <stdlib.h>
#include <stdio.h>
#include <stdio.h>
#include <ctime>
const int NUM = 2550000;

using namespace std;
void save();		// save()라는 함수를 선언(decalraration)
int comp(const void*, const void*);

int comp(const void* a, const void* b)
{
	int x = *(int*)a;
	int y = *(int*)b;


	if (x > y)
		return 1;
	if (x < y)
		return -1;
	return 0;
}
int num[NUM];
// 임의의 값으 갖는 정수 1000개를 생성하고 오름차순으로 정렬한 후 출력하라.
// 정수 100000 개를 정렬한후 출력하라.
int main()
{
	default_random_engine dre(time(nullptr));
	uniform_int_distribution<> uid(1,NUM);

	

	for (int i = 0; i < NUM; ++i)
		num[i] = uid(dre);
	qsort(num, NUM, 4, comp);

// 출력은 앞에서 100개만
	for (int i = 0; i < 100; ++i)
		cout << num[i] << "\t\t";
	cout << endl;
   save();
}



--------------------------------------------------
Fri Sep 15 13:53:06 2017
--------------------------------------------------

//-------------------------------------------------------------------------------------------------------
//2017.2 C++               월45금56	                    9.4 월요일                  9.1금요일 (1주 2)
//한 학기 강의를 저장할 수 있도록 save()를 만듬
//
//9.2 - 한 학기 강의를 저장할 수 있도록 save()를 만듦.
//9.4 - file 분리,
//    - CPP I/O, cin, cout
//    - 두 변수값의 교환 , pointer
//9.8 - 참조(reference)
//    - namespace, 선언, 메모리 , auto , decltype
//
//9.11 - qsort, 정렬이란 무엇인가? 찾아서 읽어보자.
//       const - ROM
//       void* - 이 번지의 내용은 알아서 타입변환해라
//
// 9.15 - 메모리 구조, 동적할당
//-------------------------------------------------------------------------------------------------------

#include <iostream>
#include "save.h"   //save 함수의 선언은 여기에!
#include <random>
#include <stdlib.h>
#include <stdio.h>
#include <stdio.h>
#include <ctime>


using namespace std;
void save();		// save()라는 함수를 선언(decalraration)
int comp(const void*, const void*);

//[문제] 실행 중에 STACK을 넘치게 해보라

int main()
{
	int x;
	while (1)
	{
		x += 10;
		//cout << x << endl;
	}



	save();
}

--------------------------------------------------
Fri Sep 15 13:53:31 2017
--------------------------------------------------

//-------------------------------------------------------------------------------------------------------
//2017.2 C++               월45금56	                    9.4 월요일                  9.1금요일 (1주 2)
//한 학기 강의를 저장할 수 있도록 save()를 만듬
//
//9.2 - 한 학기 강의를 저장할 수 있도록 save()를 만듦.
//9.4 - file 분리,
//    - CPP I/O, cin, cout
//    - 두 변수값의 교환 , pointer
//9.8 - 참조(reference)
//    - namespace, 선언, 메모리 , auto , decltype
//
//9.11 - qsort, 정렬이란 무엇인가? 찾아서 읽어보자.
//       const - ROM
//       void* - 이 번지의 내용은 알아서 타입변환해라
//
// 9.15 - 메모리 구조, 동적할당
//-------------------------------------------------------------------------------------------------------

#include <iostream>
#include "save.h"   //save 함수의 선언은 여기에!
#include <random>
#include <stdlib.h>
#include <stdio.h>
#include <stdio.h>
#include <ctime>


using namespace std;
void save();		// save()라는 함수를 선언(decalraration)
int comp(const void*, const void*);

//[문제] 실행 중에 STACK을 넘치게 해보라

int main()
{
	int x;
	while (1)
	{
		x += 10;
		//cout << x << endl;
	}



	save();
}

--------------------------------------------------
Fri Sep 15 13:53:59 2017
--------------------------------------------------

//-------------------------------------------------------------------------------------------------------
//2017.2 C++               월45금56	                    9.4 월요일                  9.1금요일 (1주 2)
//한 학기 강의를 저장할 수 있도록 save()를 만듬
//
//9.2 - 한 학기 강의를 저장할 수 있도록 save()를 만듦.
//9.4 - file 분리,
//    - CPP I/O, cin, cout
//    - 두 변수값의 교환 , pointer
//9.8 - 참조(reference)
//    - namespace, 선언, 메모리 , auto , decltype
//
//9.11 - qsort, 정렬이란 무엇인가? 찾아서 읽어보자.
//       const - ROM
//       void* - 이 번지의 내용은 알아서 타입변환해라
//
// 9.15 - 메모리 구조, 동적할당
//-------------------------------------------------------------------------------------------------------

#include <iostream>
#include "save.h"   //save 함수의 선언은 여기에!
#include <random>
#include <stdlib.h>
#include <stdio.h>
#include <stdio.h>
#include <ctime>


using namespace std;
void save();		// save()라는 함수를 선언(decalraration)


//[문제] 실행 중에 STACK을 넘치게 해보라

int main()
{
	int x;
	while (1)
	{
		x += 10;
		cout << x << endl;
	}



	save();
}

--------------------------------------------------
Fri Sep 15 13:56:14 2017
--------------------------------------------------

//-------------------------------------------------------------------------------------------------------
//2017.2 C++               월45금56	                    9.4 월요일                  9.1금요일 (1주 2)
//한 학기 강의를 저장할 수 있도록 save()를 만듬
//
//9.2 - 한 학기 강의를 저장할 수 있도록 save()를 만듦.
//9.4 - file 분리,
//    - CPP I/O, cin, cout
//    - 두 변수값의 교환 , pointer
//9.8 - 참조(reference)
//    - namespace, 선언, 메모리 , auto , decltype
//
//9.11 - qsort, 정렬이란 무엇인가? 찾아서 읽어보자.
//       const - ROM
//       void* - 이 번지의 내용은 알아서 타입변환해라
//
// 9.15 - 메모리 구조, 동적할당
//-------------------------------------------------------------------------------------------------------

#include <iostream>
#include "save.h"   //save 함수의 선언은 여기에!
#include <random>
#include <stdlib.h>
#include <stdio.h>
#include <stdio.h>
#include <ctime>


using namespace std;
void save();		// save()라는 함수를 선언(decalraration)


//[문제] 실행 중에 STACK을 넘치게 해보라

int main()
{
	int x=1;
	cout << x << endl;
	while (1)
	{
		x += 10;
		cout << x << endl;
	}
	system("pause");


	save();
}

--------------------------------------------------
Fri Sep 15 13:56:34 2017
--------------------------------------------------

//-------------------------------------------------------------------------------------------------------
//2017.2 C++               월45금56	                    9.4 월요일                  9.1금요일 (1주 2)
//한 학기 강의를 저장할 수 있도록 save()를 만듬
//
//9.2 - 한 학기 강의를 저장할 수 있도록 save()를 만듦.
//9.4 - file 분리,
//    - CPP I/O, cin, cout
//    - 두 변수값의 교환 , pointer
//9.8 - 참조(reference)
//    - namespace, 선언, 메모리 , auto , decltype
//
//9.11 - qsort, 정렬이란 무엇인가? 찾아서 읽어보자.
//       const - ROM
//       void* - 이 번지의 내용은 알아서 타입변환해라
//
// 9.15 - 메모리 구조, 동적할당
//-------------------------------------------------------------------------------------------------------

#include <iostream>
#include "save.h"   //save 함수의 선언은 여기에!
#include <random>
#include <stdlib.h>
#include <stdio.h>
#include <stdio.h>
#include <ctime>


using namespace std;
void save();		// save()라는 함수를 선언(decalraration)


//[문제] 실행 중에 STACK을 넘치게 해보라

int main()
{
	int x=1;
	cout << x << endl;
	while (1)
	{
		x += 10;
		cout << x << endl;
	}
	system("pause");


	save();
}

--------------------------------------------------
Fri Sep 15 13:58:03 2017
--------------------------------------------------

//-------------------------------------------------------------------------------------------------------
//2017.2 C++               월45금56	                    9.4 월요일                  9.1금요일 (1주 2)
//한 학기 강의를 저장할 수 있도록 save()를 만듬
//
//9.2 - 한 학기 강의를 저장할 수 있도록 save()를 만듦.
//9.4 - file 분리,
//    - CPP I/O, cin, cout
//    - 두 변수값의 교환 , pointer
//9.8 - 참조(reference)
//    - namespace, 선언, 메모리 , auto , decltype
//
//9.11 - qsort, 정렬이란 무엇인가? 찾아서 읽어보자.
//       const - ROM
//       void* - 이 번지의 내용은 알아서 타입변환해라
//
// 9.15 - 메모리 구조, 동적할당
//-------------------------------------------------------------------------------------------------------

#include <iostream>
#include "save.h"   //save 함수의 선언은 여기에!
#include <random>
#include <stdlib.h>
#include <stdio.h>
#include <stdio.h>
#include <ctime>


using namespace std;
void save();		// save()라는 함수를 선언(decalraration)


//[문제] 실행 중에 STACK을 넘치게 해보라
//STACK에는 지역변수가들어간다
//그렇다면 지역변수를 계속만들면 Stack이 넘치겠지?

int main()
{
	
	while (true) {
		int num;
	}
	
		
	
	system("pause");


	save();
}

--------------------------------------------------
Fri Sep 15 13:59:14 2017
--------------------------------------------------

//-------------------------------------------------------------------------------------------------------
//2017.2 C++               월45금56	                    9.4 월요일                  9.1금요일 (1주 2)
//한 학기 강의를 저장할 수 있도록 save()를 만듬
//
//9.2 - 한 학기 강의를 저장할 수 있도록 save()를 만듦.
//9.4 - file 분리,
//    - CPP I/O, cin, cout
//    - 두 변수값의 교환 , pointer
//9.8 - 참조(reference)
//    - namespace, 선언, 메모리 , auto , decltype
//
//9.11 - qsort, 정렬이란 무엇인가? 찾아서 읽어보자.
//       const - ROM
//       void* - 이 번지의 내용은 알아서 타입변환해라
//
// 9.15 - 메모리 구조, 동적할당
//-------------------------------------------------------------------------------------------------------

#include <iostream>
#include "save.h"   //save 함수의 선언은 여기에!
#include <random>
#include <stdlib.h>
#include <stdio.h>
#include <stdio.h>
#include <ctime>


using namespace std;
void save();		// save()라는 함수를 선언(decalraration)


//[문제] 실행 중에 STACK을 넘치게 해보라
//STACK에는 지역변수가들어간다
//그렇다면 지역변수를 계속만들면 Stack이 넘치겠지?

int main()
{
	
	
	int num;
	main();
	
	
		
	
	system("pause");


	save();
}

--------------------------------------------------
Fri Sep 15 13:59:37 2017
--------------------------------------------------

//-------------------------------------------------------------------------------------------------------
//2017.2 C++               월45금56	                    9.4 월요일                  9.1금요일 (1주 2)
//한 학기 강의를 저장할 수 있도록 save()를 만듬
//
//9.2 - 한 학기 강의를 저장할 수 있도록 save()를 만듦.
//9.4 - file 분리,
//    - CPP I/O, cin, cout
//    - 두 변수값의 교환 , pointer
//9.8 - 참조(reference)
//    - namespace, 선언, 메모리 , auto , decltype
//
//9.11 - qsort, 정렬이란 무엇인가? 찾아서 읽어보자.
//       const - ROM
//       void* - 이 번지의 내용은 알아서 타입변환해라
//
// 9.15 - 메모리 구조, 동적할당
//-------------------------------------------------------------------------------------------------------

#include <iostream>
#include "save.h"   //save 함수의 선언은 여기에
#include <stdio.h>



using namespace std;
void save();		// save()라는 함수를 선언(decalraration)


//[문제] 실행 중에 STACK을 넘치게 해보라
//STACK에는 지역변수가들어간다
//그렇다면 지역변수를 계속만들면 Stack이 넘치겠지?

int main()
{
	
	
	int num;
	main();
	
	
		
	
	system("pause");


	save();
}

--------------------------------------------------
Fri Sep 15 14:01:11 2017
--------------------------------------------------

//-------------------------------------------------------------------------------------------------------
//2017.2 C++               월45금56	                    9.4 월요일                  9.1금요일 (1주 2)
//한 학기 강의를 저장할 수 있도록 save()를 만듬
//
//9.2 - 한 학기 강의를 저장할 수 있도록 save()를 만듦.
//9.4 - file 분리,
//    - CPP I/O, cin, cout
//    - 두 변수값의 교환 , pointer
//9.8 - 참조(reference)
//    - namespace, 선언, 메모리 , auto , decltype
//
//9.11 - qsort, 정렬이란 무엇인가? 찾아서 읽어보자.
//       const - ROM
//       void* - 이 번지의 내용은 알아서 타입변환해라
//
// 9.15 - 메모리 구조, 동적할당
//-------------------------------------------------------------------------------------------------------

#include <iostream>
#include "save.h"   //save 함수의 선언은 여기에
#include <stdio.h>



using namespace std;
void save();		// save()라는 함수를 선언(decalraration)


//[문제] 실행 중에 STACK을 넘치게 해보라
//STACK에는 지역변수가들어간다
//그렇다면 지역변수를 계속만들면 Stack이 넘치겠지?

int i;

int main()
{
	
	
	int num;
	cout << ++i << endl;
	main();
	
	
		
	
	system("pause");


	save();
}
--------------------------------------------------
Fri Sep 15 14:41:11 2017
--------------------------------------------------

//-------------------------------------------------------------------------------------------------------
//2017.2 C++               월45금56	                    9.4 월요일                  9.1금요일 (1주 2)
//한 학기 강의를 저장할 수 있도록 save()를 만듬
//
//9.2 - 한 학기 강의를 저장할 수 있도록 save()를 만듦.
//9.4 - file 분리,
//    - CPP I/O, cin, cout
//    - 두 변수값의 교환 , pointer
//9.8 - 참조(reference)
//    - namespace, 선언, 메모리 , auto , decltype
//
//9.11 - qsort, 정렬이란 무엇인가? 찾아서 읽어보자.
//       const - ROM
//       void* - 이 번지의 내용은 알아서 타입변환해라
//
// 9.15 - 메모리 구조, 동적할당
//-------------------------------------------------------------------------------------------------------

#include <iostream>
#include "save.h"   //save 함수의 선언은 여기에
#include <stdio.h>



using namespace std;
void save();		// save()라는 함수를 선언(decalraration)


//[문제] 1000만개의 정수를 정렬하려고 한다.
//STACK에는 이런 크기의 정수를 담을 수 없다.
//DATA영역에 전역변수로 만들면 프로그램이 차지하는 메모리의 크기가 커진다.
//어떤 해결방법이 있을까?
// -> 동적할당(dynamic allocation)
//  dynamic - 프로그램이 실행될때(run time)를 의미함.
//  dynamic의 반대말 - compile time


int main()
{

	//HEAP에서 1000만개의  int를 담을 수 있는 공간을 요청함.
	int* p = new int[10000000];
	
	delete[] p; //new에서 쓴 메모리 제거

	save();
}
--------------------------------------------------
Fri Sep 15 15:01:11 2017
--------------------------------------------------

//-------------------------------------------------------------------------------------------------------
//2017.2 C++               월45금56	                    9.4 월요일                  9.1금요일 (1주 2)
//한 학기 강의를 저장할 수 있도록 save()를 만듬
//
//9.2 - 한 학기 강의를 저장할 수 있도록 save()를 만듦.
//9.4 - file 분리,
//    - CPP I/O, cin, cout
//    - 두 변수값의 교환 , pointer
//9.8 - 참조(reference)
//    - namespace, 선언, 메모리 , auto , decltype
//
//9.11 - qsort, 정렬이란 무엇인가? 찾아서 읽어보자.
//       const - ROM
//       void* - 이 번지의 내용은 알아서 타입변환해라
//
// 9.15 - 메모리 구조, 동적할당
//-------------------------------------------------------------------------------------------------------

#include <iostream>
#include "save.h"   //save 함수의 선언은 여기에
#include <random>
#include <algorithm>


using namespace std;
void save();		// save()라는 함수를 선언(decalraration)


//[문제] 1000만개의 정수를 담을 수 있는 공간을 동적할당하라.
// 정수의 값을 랜덤엔짐과 분포를 사용하여 임의의 값으로 채워라.
// 1000만개의 정수를 오름차순으로 정렬하라.
// 앞에서부터 1000개의 값을 화면 출력하라.
//
// 여기서 정렬알고리즘은 STL의 sort를 이용한다.

int main()
{
        //sort 사용 예

        int num[10] {1,3,5,7,9,2,4,6,8,10};
        
        sort(&num[0],&num[10]);  //sort(정렬시작번지, 정렬끝번지+1);

        for (int d : num)
          cout << d << endl;
	

        

	save();
}

--------------------------------------------------
Fri Sep 15 15:10:15 2017
--------------------------------------------------

//-------------------------------------------------------------------------------------------------------
//2017.2 C++               월45금56	                    9.4 월요일                  9.1금요일 (1주 2)
//한 학기 강의를 저장할 수 있도록 save()를 만듬
//
//9.2 - 한 학기 강의를 저장할 수 있도록 save()를 만듦.
//9.4 - file 분리,
//    - CPP I/O, cin, cout
//    - 두 변수값의 교환 , pointer
//9.8 - 참조(reference)
//    - namespace, 선언, 메모리 , auto , decltype
//
//9.11 - qsort, 정렬이란 무엇인가? 찾아서 읽어보자.
//       const - ROM
//       void* - 이 번지의 내용은 알아서 타입변환해라
//
// 9.15 - 메모리 구조, 동적할당
//-------------------------------------------------------------------------------------------------------

#include <iostream>
#include "save.h"   //save 함수의 선언은 여기에
#include <random>
#include <algorithm>


using namespace std;
void save();		// save()라는 함수를 선언(decalraration)


//[문제] 1000만개의 정수를 담을 수 있는 공간을 동적할당하라.
// 정수의 값을 랜덤엔짐과 분포를 사용하여 임의의 값으로 채워라.
// 1000만개의 정수를 오름차순으로 정렬하라.
// 앞에서부터 1000개의 값을 화면 출력하라.
//
// 여기서 정렬알고리즘은 STL의 sort를 이용한다.

int main()
{
        //sort 사용 예

        /*int num[10] {1,3,5,7,9,2,4,6,8,10};
        
        sort(&num[0],&num[10]);  //sort(정렬시작번지, 정렬끝번지+1);

        for (int d : num)
          cout << d << endl;*/
	

        int* p = new[10000000];
    
        default_random_engine dre;
        uniform_int_distribution<> uid(0,10000000);

        for(int i=0; i <= 10000000; ++i)
          p[i]=uid(dre);
        
        sort(p,p[10000000]);

       for(int j=0; j <= 1000; ++j)
         cout << p[j] << endl;
        
       delete[] p;
        
        

	save();
}
